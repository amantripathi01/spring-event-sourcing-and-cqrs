# ********RoostGPT********

# Test generated by RoostGPT for test karateTest22March using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /nobelPrize/{category}/{year}_get for http method type GET 
# RoostTestHash=9818bf6b39
# 
# 

# ********RoostGPT********
Feature: Nobel Prize API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase

Scenario Outline: Obtain information about one specific Nobel Prize
  Given path '2.1/nobelPrize', '<category>', '<year>'
  When method get
  Then status <status>

  * def responseSchema = 
  """
  {
    "nobelPrize": "#object",
    "awardYear": "#integer",
    "category": {
      "en": "#string",
      "se": "#string"
    },
    "categoryFullName": {
      "en": "#string",
      "se": "#string"
    },
    "dateAwarded": "#string",
    "prizeAmount": "#integer",
    "prizeAmountAdjusted": "#integer",
    "topMotivation": {
      "en": "#string",
      "se": "#string"
    },
    "laureates": [
      {
        "id": "#integer",
        "name": {
          "en": "#string",
          "se": "#string"
        },
        "portion": "#string",
        "sortOrder": "#string",
        "motivation": {
          "en": "#string",
          "se": "#string"
        },
        "links": [
          {
            "rel": "#string",
            "href": "#string",
            "action": "#string",
            "types": "#string"
          }
        ]
      }
    ]
  }
  """
  And match each response == responseSchema

  Examples:
  | category | year | status |
  | 'phy'    | 1989 | 200    |
  | 'che'    | 1902 | 200    |
  | 'med'    | 1920 | 400    |
  | 'lit'    | 1990 | 404    |
  | 'pea'    | 1901 | 422    |
